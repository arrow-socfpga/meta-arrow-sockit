/*
 *  Copyright (C) 2017 Arrow Electronics, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */


#include "socfpga_cyclone5.dtsi"

/ {
	model = "Arrow SoCKit";
	compatible = "altr,socfpga-cyclone5", "altr,socfpga";

	chosen {
		bootargs = "earlyprintk";
		stdout-path = "serial0:115200n8";
	};

	memory {
		name = "memory";
		device_type = "memory";
		reg = <0x0 0x40000000>; /* 1GB */
	};

	aliases {
		ethernet0 = &gmac1;
	};

	regulator_3_3v: vcc3p3-regulator {
		compatible = "regulator-fixed";
		regulator-name = "VCC3P3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};
	
	soc {
		clkmgr@ffd04000 {
			clocks {
				#clock-cells = <0>;
							   
				clk_0: clk_0 {
					#clock-cells = <0>;
					compatible = "fixed-clock";	
					clock-frequency = <50000000>;
					clock-output-names = "clk_0-clk";
				};
			};
		};
		
		base_fpga_region: base-fpga-region {
			compatible = "fpga-region";
			fpga-mgr = <&fpga_mgr>;
			fpga-bridges = <&fpga_bridge0>, <&fpga_bridge1>,
					<&fpga_bridge2>, <&fpga_bridge3>;
	
			#address-cells = <0x1>;
			#size-cells = <0x1>;
			ranges = <0 0xff200000 0x100000>,
				 <1 0xc0000000 0x20000000>;
			
			alt_vip_vfr_0: vip@0x00000100 {
			compatible = "altr,vip-frame-reader-1.0";
			reg = <0x00000100 0x00000080>;
			max-width = <1920>;
			max-height = <1080>;
			bits-per-color = <8>;
			mem-word-width = <128>;
			};
			
			jtag_uart: serial@0x100020000 {
				compatible = "altr,juart-15.1", "altr,juart-1.0";
				reg = <0x00020000 0x00000008>;
				//interrupt-parent = <&hps_0_arm_gic_0>;
				interrupts = <0 42 4>;
				clocks = <&clk_0>;
			}; //end serial@0x100020000 (jtag_uart)

			sysid_qsys: sysid@0x100010000 {
				compatible = "altr,sysid-15.1", "altr,sysid-1.0";
				reg = <0x00010000 0x00000008>;
				clocks = <&clk_0>;
				id = <2899645186>;	/* embeddedsw.dts.params.id type NUMBER */
				timestamp = <1461878490>;	/* embeddedsw.dts.params.timestamp type NUMBER */
			}; //end sysid@0x100010000 (sysid_qsys)

			button_pio: gpio@0x1000100c0 {
				compatible = "altr,pio-15.1", "altr,pio-1.0";
				reg = <0x000100c0 0x00000010>;
				//interrupt-parent = <&hps_0_arm_gic_0>;
				interrupts = <0 41 1>;
				clocks = <&clk_0>;
				altr,gpio-bank-width = <2>;	/* embeddedsw.dts.params.altr,gpio-bank-width type NUMBER */
				altr,interrupt-type = <2>;	/* embeddedsw.dts.params.altr,interrupt-type type NUMBER */
				altr,interrupt_type = <2>;	/* embeddedsw.dts.params.altr,interrupt_type type NUMBER */
				edge_type = <1>;	/* embeddedsw.dts.params.edge_type type NUMBER */
				level_trigger = <0>;	/* embeddedsw.dts.params.level_trigger type NUMBER */
				resetvalue = <0>;	/* embeddedsw.dts.params.resetvalue type NUMBER */
				#gpio-cells = <2>;
				gpio-controller;
			}; //end gpio@0x1000100c0 (button_pio)

			dipsw_pio: gpio@0x100010080 {
				compatible = "altr,pio-15.1", "altr,pio-1.0";
				reg = <0x00010080 0x00000010>;
				//interrupt-parent = <&hps_0_arm_gic_0>;
				interrupts = <0 40 1>;
				clocks = <&clk_0>;
				altr,gpio-bank-width = <4>;	/* embeddedsw.dts.params.altr,gpio-bank-width type NUMBER */
				altr,interrupt-type = <3>;	/* embeddedsw.dts.params.altr,interrupt-type type NUMBER */
				altr,interrupt_type = <3>;	/* embeddedsw.dts.params.altr,interrupt_type type NUMBER */
				edge_type = <2>;	/* embeddedsw.dts.params.edge_type type NUMBER */
				level_trigger = <0>;	/* embeddedsw.dts.params.level_trigger type NUMBER */
				resetvalue = <0>;	/* embeddedsw.dts.params.resetvalue type NUMBER */
				#gpio-cells = <2>;
				gpio-controller;
			}; //end gpio@0x100010080 (dipsw_pio)

			led_pio: gpio@0x100010040 {
				compatible = "altr,pio-15.1", "altr,pio-1.0";
				reg = <0x00010040 0x00000010>;
				clocks = <&clk_0>;
				altr,gpio-bank-width = <4>;	/* embeddedsw.dts.params.altr,gpio-bank-width type NUMBER */
				resetvalue = <0>;	/* embeddedsw.dts.params.resetvalue type NUMBER */
				#gpio-cells = <2>;
				gpio-controller;
			}; //end gpio@0x100010040 (led_pio)			
		};

	};
		
};

&gmac1 {
	status = "okay";
	phy-mode = "rgmii";

	rxd0-skew-ps = <0>;
	rxd1-skew-ps = <0>;
	rxd2-skew-ps = <0>;
	rxd3-skew-ps = <0>;
	txen-skew-ps = <0>;
	txc-skew-ps = <2600>;
	rxdv-skew-ps = <0>;
	rxc-skew-ps = <2000>;
};

&mmc0 {
	vmmc-supply = <&regulator_3_3v>;
	vqmmc-supply = <&regulator_3_3v>;
};

&qspi {
	flash0: n25q00@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "n25q00";
		reg = <0>;      /* chip select */
		spi-max-frequency = <100000000>;
		m25p,fast-read;
		page-size = <256>;
		block-size = <16>; /* 2^16, 64KB */
		read-delay = <4>;  /* delay value in read data capture register */
		tshsl-ns = <50>;
		tsd2d-ns = <50>;
		tchsh-ns = <4>;
		tslch-ns = <4>;

		partition@qspi-boot {
			/* 8MB for raw data. */
			label = "Flash 0 Raw Data";
			reg = <0x0 0x800000>;
		};

		partition@qspi-rootfs {
			/* 120MB for jffs2 data. */
			label = "Flash 0 jffs2 Filesystem";
			reg = <0x800000 0x7800000>;
		};
	};
};

&uart0 {
	status = "okay";
};

&usb1 {
	status = "okay";
};

